#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-5 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################



# "integer" complex numbers
# inspired by http://rosettacode.org/wiki/Arithmetic/Complex#UNIX_Shell

#@method
function bashlets_math_icomplex_create()
{
	declare -i real="$1"
	declare -i img="$2"

	echo "$real:$img"
}

#@method
function bashlets_math_icomplex_to_real()
{
	declare w="$1"
	(
		IFS=":"
		set -- $w  # no quotes!
		echo "$1"
	)
}

#@method
function bashlets_math_icomplex_to_img()
{
	declare w="$1"
	(
		IFS=":"
		set -- $w  # no quotes!
		echo "$2"
	)
}

#@method
function bashlets_math_icomplex_to_s()
{
	declare w="$1"
	declare -i real img

	real="$(bashlets_math_icomplex_to_real "$w")"
	img="$(bashlets_math_icomplex_to_img "$w")"

	echo "$real + ${img}i"
}

#@method
function bashlets_math_icomplex_is_zero()
{
	declare w="$1"
	declare -i real img

	real="$(bashlets_math_icomplex_to_real "$w")"
	img="$(bashlets_math_icomplex_to_img "$w")"

	[[ "$real" -eq 0 && "$img" -eq 0 ]]
}

#@method
function bashlets_math_icomplex_negate()
{
	declare w="$1"
	declare -i real img

	real="$((-1 * $(bashlets_math_icomplex_to_real "$w")))"
	img="$((-1 * $(bashlets_math_icomplex_to_img "$w")))"

	bashlets_math_icomplex_create "$real" "$img"
}

#@method
function bashlets_math_icomplex_conjugate()
{
	declare w="$1"
	declare -i real img

	real="$(bashlets_math_icomplex_to_real "$w")"
	img="$((-1 * $(bashlets_math_icomplex_to_img "$w")))"

	bashlets_math_icomplex_create "$real" "$img"
}

#@method
function bashlets_math_icomplex_norm2()
{
	declare w="$1"
	declare -i real img

	real="$(bashlets_math_icomplex_to_real "$w")"
	img="$(bashlets_math_icomplex_to_img "$w")"

	echo "$((real**2 + img**2))"
}

#@method
function bashlets_math_icomplex_add()
{
	declare w="$1"
	declare z="$2"
	declare -i realw imgw
	declare -i realz imgz
	declare -i real img

	realw="$(bashlets_math_icomplex_to_real "$w")"
	realz="$(bashlets_math_icomplex_to_real "$z")"
	imgw="$(bashlets_math_icomplex_to_img "$w")"
	imgz="$(bashlets_math_icomplex_to_img "$z")"

	real="$((realw + realz))"
	img="$((imgw + imgz))"

	bashlets_math_icomplex_create "$real" "$img"
}

#@method
function bashlets_math_icomplex_subtract()
{
	declare w="$1"
	declare z="$2"

	bashlets_math_icomplex_add "$w" "$(bashlets_math_icomplex_negate "$z")"
}

#@method
function bashlets_math_icomplex_multiply()
{
	declare w="$1"
	declare z="$2"
	declare -i realw imgw
	declare -i realz imgz
	declare -i real img

	realw="$(bashlets_math_icomplex_to_real "$w")"
	realz="$(bashlets_math_icomplex_to_real "$z")"
	imgw="$(bashlets_math_icomplex_to_img "$w")"
	imgz="$(bashlets_math_icomplex_to_img "$z")"

	real=$((realw*realz - imgw*imgz))
	img=$((imgw*realz + realw*imgz))

	bashlets_math_icomplex_create "$real" "$img"
}

#@method
function bashlets_math_icomplex_square()
{
	declare w="$1"

	bashlets_math_icomplex_multiply "$w" "$w"
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
