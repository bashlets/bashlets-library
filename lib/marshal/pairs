#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-6 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


#@method
function bashlets_marshal_pairs_get_by_key()
{
    local mykey="$1"
    [[ -n $mykey ]] || return
    while read line
    do
        IFS=: read -r -a pair <<< "$line"
        if [[ ${pair[0]} == $mykey ]]
        then
            echo "${pair[1]}"
            return
        fi
    done
}

#@method
function bashlets_marshal_pairs_set_by_key()
{
    local mykey="$1" ; shift ; myvalue="$@"
    local -i set=0
    while read line
    do
        IFS=: read -r -a pair <<< "$line"
        if [[ ${pair[0]} == $mykey ]]
        then
            if [[ $set -eq 0 ]]
            then
                echo "${pair[0]}:$myvalue"
                set=1
            fi
        else
            echo "${pair[0]}:${pair[1]}"
        fi
    done
    if [[ -n $mykey && $set -eq 0 ]]
    then
        echo "$mykey:$myvalue"
        set=1
    fi
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
