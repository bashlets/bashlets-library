################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-6 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


BASHLETS_CLIENT_HTTPS_BACKEND=curl
BASHLETS_CLIENT_HTTPS_USERAGENT="bashlets_$BASHLETS_VERSION"


function __bashlets_client_https_curl()
{
	local verb="$1" url="$2" options

			 [[ -n $BASHLETS_CLIENT_HTTP_USERAGENT ]]  \
	&& options="-A $BASHLETS_CLIENT_HTTP_USERAGENT"

	case $verb in
		get)
			curl $options -s "$url"
			;;
		head)
			curl $options -s -I "$url"
			;;
		*)
			return 1
			;;
	esac
}

function __bashlets_client_https_lynx()
{
	local verb="$1" url="$2" options

           			 [[ -n $BASHLETS_CLIENT_HTTP_USERAGENT ]]  \
	&& options="-useragent $BASHLETS_CLIENT_HTTP_USERAGENT"

	case $verb in
		get)
			lynx -dump -nolist -noredir -source "$url"
			;;
		head)
			lynx -head -dump -source "$url"
			;;
		*)
			return 1
			;;
	esac
}


#@method
function bashlets_client_https_sanitize_url()
{
	local url="$1"

	# assume https
	[[ $url =~ ^(http|https)://.*$ ]] || url="https://$url"

	echo "$url"
}

#@method
function bashlets_client_https_get()
{
	local url="$1"
	local backend=$BASHLETS_CLIENT_HTTPS_BACKEND

	[[ -n $url ]] || return
	url="$(bashlets_client_https_sanitize_url "$url")"

	__bashlets_client_https_$backend get "$url"
}

#@method
function bashlets_client_https_head()
{
	local url="$1"
	local backend=$BASHLETS_CLIENT_HTTPS_BACKEND

	[[ -n $url ]] || return
	url="$(bashlets_client_https_sanitize_url "$url")"

	__bashlets_client_https_$backend head "$url"
}

# ex: ts=4 sw=4 et filetype=sh noexpandtab
