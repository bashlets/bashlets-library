#!/bin/bash


################################################################################
#                                         
# |              |    |         |         
# |---.,---.,---.|---.|    ,---.|--- ,---.
# |   |,---|`---.|   ||    |---'|    `---.
# `---'`---^`---'`   '`---'`---'`---'`---'
#
#                                        
# Bashlets -- A modular extensible toolbox for Bash
#
# Copyright (c) 2014-5 Roberto Reale
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


function __bashlets_datatype_version_naive_sort()
{
    # naive Bash implementation
    # cf. http://stackoverflow.com/questions/16989598/
    test $# -gt 0 &&
        echo "$@"                                                     \
            | xargs -n 1                                              \
            | awk -F. '{ printf("%d.%d.%d.%s\n", $1, $2, $3, $0) }'   \
            | sort -t. -n -k1,3                                       \
            | sed 's/^[0-9]\.[0-9]\.[0-9]\.\([0-9]*\)/\1/'
}

#@method
function bashlets_datatype_version_sort()
{
    (
        echo "$@" | xargs -n 1 | sort --version-sort

    ) 2> /dev/null || __bashlets_datatype_version_naive_sort "$@"
}

#@method
function bashlets_datatype_version_less_than()
{
    local min
    # GNU sort is needed here
    min="$(bashlets_datatype_version_sort "$@" | head -1)"
    [[ $min == $1 ]]
}

#@method
function bashlets_datatype_version_greater_than()
{
    local max
    # GNU sort is needed here
    max="$(bashlets_datatype_version_sort "$@" | tail -1)"
    [[ $max == $1 ]]
}

#@method
function bashlets_datatype_version_min()
{
    bashlets_datatype_version_sort "$@" | head -1
}

#@method
function bashlets_datatype_version_max()
{
    bashlets_datatype_version_sort "$@" | tail -1
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
